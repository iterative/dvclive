name: Tests

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

env:
  FORCE_COLOR: "1"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - uses: astral-sh/setup-uv@v7
        with:
          enable-cache: false

      - name: Install nox
        run: uv pip install --system nox --upgrade

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit-4|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Lint code
        run: nox -s lint

  tests:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        pyv: ["3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]
        type: [core_tests]
        include:
          - os: ubuntu-latest
            pyv: "3.13"
            type: tests
        exclude:
          - os: ubuntu-latest
            pyv: "3.13"
            type: core_tests
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.pyv }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.pyv }}

      - uses: astral-sh/setup-uv@v7
        with:
          enable-cache: false

      - name: Install nox
        run: uv pip install --system nox --upgrade

      - name: Run tests
        run: nox -s ${{ matrix.type }}-${{ matrix.pyv }} -- --cov-report=xml

      - name: Build package
        run: nox -s build

      - name: Upload coverage report
        uses: codecov/codecov-action@v5

  check:
    if: always()
    needs: [lint, tests]
    runs-on: ubuntu-latest
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
